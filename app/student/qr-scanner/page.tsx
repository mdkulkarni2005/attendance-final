"use client";

import { useEffect, useRef, useState } from "react";
import { useRouter } from "next/navigation";
import Link from "next/link";
import QrScanner from 'qr-scanner';

export default function QRScannerPage() {
  const router = useRouter();
  const videoRef = useRef<HTMLVideoElement>(null);
  const [qrScanner, setQrScanner] = useState<QrScanner | null>(null);
  const [scanning, setScanning] = useState(false);
  const [error, setError] = useState<string | null>(null);
  const [hasCamera, setHasCamera] = useState<boolean>(false);

  useEffect(() => {
    // Check if camera is available
    QrScanner.hasCamera().then(setHasCamera);

    return () => {
      // Cleanup scanner on unmount
      if (qrScanner) {
        qrScanner.stop();
        qrScanner.destroy();
      }
    };
  }, [qrScanner]);

  async function startScanning() {
    if (!videoRef.current) return;
    
    setScanning(true);
    setError(null);

    try {
      const scanner = new QrScanner(
        videoRef.current,
        (result) => handleScanResult(result.data),
        {
          highlightScanRegion: true,
          highlightCodeOutline: true,
          preferredCamera: 'environment', // Use back camera on mobile
        }
      );

      await scanner.start();
      setQrScanner(scanner);
      console.log('üì∑ QR Scanner started');
      
    } catch (err: any) {
      console.error('QR Scanner error:', err);
      setError('Failed to start camera. Please check camera permissions and try again.');
      setScanning(false);
    }
  }

  function handleScanResult(data: string) {
    console.log('üì± QR Code scanned:', data);
    
    try {
      const url = new URL(data);
      
      // Check if it's a secure token-based QR code
      const tokenMatch = url.searchParams.get('token');
      if (tokenMatch && url.pathname.includes('/student/qr-scanner')) {
        console.log('üîê Secure QR token detected:', tokenMatch);
        
        // Stop scanner before navigation
        if (qrScanner) {
          qrScanner.stop();
        }
        
        // Navigate to secure attendance page with token
        router.push(`/student/attendance/secure?token=${tokenMatch}`);
        return;
      }
      
      // Fallback: Check if it's a legacy direct session URL
      const pathMatch = url.pathname.match(/\/student\/attendance\/(.+)$/);
      if (pathMatch && pathMatch[1]) {
        const sessionId = pathMatch[1];
        console.log('‚ö†Ô∏è Legacy direct session URL detected:', sessionId);
        
        // Stop scanner before navigation
        if (qrScanner) {
          qrScanner.stop();
        }
        
        // Navigate to regular attendance page (less secure)
        router.push(`/student/attendance/${sessionId}`);
        return;
      }
      
      setError('Invalid QR code. Please scan a valid attendance session QR code generated by your teacher.');
      setTimeout(() => setError(null), 4000);
      
    } catch (err) {
      console.error('QR scan error:', err);
      setError('Invalid QR code format. Please scan a QR code generated by your teacher.');
      setTimeout(() => setError(null), 4000);
    }
  }

  function stopScanning() {
    if (qrScanner) {
      qrScanner.stop();
      qrScanner.destroy();
      setQrScanner(null);
    }
    setScanning(false);
  }

  return (
    <main className="min-h-screen p-6 bg-gradient-to-br from-slate-900 to-black">
      <div className="max-w-md mx-auto">
        <header className="mb-8">
          <Link href="/student/dashboard" className="text-white/80 hover:text-white text-sm">
            ‚Üê Back to Dashboard
          </Link>
          <h1 className="text-3xl font-semibold text-white mt-4">QR Scanner</h1>
          <p className="text-white/70">Scan QR code to join attendance session</p>
        </header>

        <div className="rounded-2xl border border-slate-200 bg-white shadow-lg overflow-hidden">
          <div className="px-6 py-4 bg-slate-50 border-b">
            <h2 className="text-xl font-semibold text-slate-900">üì± Scan Attendance QR Code</h2>
          </div>
          
          <div className="p-6">
            {hasCamera === false ? (
              <div className="text-center py-8">
                <svg className="w-16 h-16 text-red-500 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2zM7 9l4 4m0-4l-4 4" />
                </svg>
                <h3 className="text-lg font-medium text-red-600 mb-2">Camera Not Available</h3>
                <p className="text-slate-600 text-sm mb-4">
                  Camera access is required to scan QR codes. Please check your device settings.
                </p>
                <Link 
                  href="/student/dashboard"
                  className="px-4 py-2 bg-slate-900 text-white rounded-lg"
                >
                  Back to Dashboard
                </Link>
              </div>
            ) : (
              <>
                {/* Scanner Video Container */}
                <div className="relative mb-4">
                  <video
                    ref={videoRef}
                    className="w-full h-64 bg-black rounded-lg object-cover"
                    style={{ display: scanning ? 'block' : 'none' }}
                  />
                  
                  {!scanning && (
                    <div className="w-full h-64 bg-slate-100 rounded-lg flex items-center justify-center">
                      <div className="text-center">
                        <svg className="w-16 h-16 text-slate-400 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 4v1m6 11h2m-6 0h-2v4m0-11v3m0 0h.01M12 12h4.01M16 20h4M4 12h4m12 0h.01M5 8h2a1 1 0 001-1V5a1 1 0 00-1-1H5a1 1 0 00-1 1v2a1 1 0 001 1zm12 0h2a1 1 0 001-1V5a1 1 0 00-1-1h-2a1 1 0 00-1 1v2a1 1 0 001 1zM5 20h2a1 1 0 001-1v-2a1 1 0 00-1-1H5a1 1 0 00-1 1v2a1 1 0 001 1z" />
                        </svg>
                        <p className="text-slate-600">Camera preview will appear here</p>
                      </div>
                    </div>
                  )}
                </div>

                {/* Error Display */}
                {error && (
                  <div className="mb-4 p-3 bg-red-50 border border-red-200 rounded-lg">
                    <p className="text-red-700 text-sm">{error}</p>
                  </div>
                )}

                {/* Controls */}
                <div className="space-y-3">
                  {!scanning ? (
                    <button
                      onClick={startScanning}
                      disabled={hasCamera === false}
                      className="w-full px-4 py-3 bg-green-600 text-white rounded-lg font-medium hover:bg-green-700 disabled:opacity-60 disabled:cursor-not-allowed flex items-center justify-center gap-2"
                    >
                      <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z" />
                      </svg>
                      Start Camera & Scan QR Code
                    </button>
                  ) : (
                    <button
                      onClick={stopScanning}
                      className="w-full px-4 py-3 bg-red-600 text-white rounded-lg font-medium hover:bg-red-700 flex items-center justify-center gap-2"
                    >
                      <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 10a1 1 0 011-1h4a1 1 0 011 1v4a1 1 0 01-1 1h-4a1 1 0 01-1-1v-4z" />
                      </svg>
                      Stop Scanning
                    </button>
                  )}
                </div>

                {/* Instructions */}
                <div className="mt-6 p-4 bg-blue-50 rounded-lg">
                  <h3 className="font-medium text-blue-900 mb-2">üìã How to Scan:</h3>
                  <ol className="text-sm text-blue-800 space-y-1">
                    <li>1. Click "Start Camera & Scan QR Code"</li>
                    <li>2. Allow camera permission when prompted</li>
                    <li>3. Point camera at the QR code from your teacher</li>
                    <li>4. Wait for automatic detection</li>
                    <li>5. You'll be redirected to mark attendance</li>
                  </ol>
                </div>
              </>
            )}
          </div>
        </div>
      </div>
    </main>
  );
}
